<TestRun name="ADONIS 5.1 UL5 (mfb_bpmn_1.1)-A.3.0-roundtrip.bpmn"/>  <TestFile name="/Users/tstephen/git/bpmn-miwg-test-suite/A - Fixed Digrams with Variations of Attributes/ADONIS 5.1 UL5 (mfb_bpmn_1.1)/A.3.0-roundtrip.bpmn"/>
  <Test name="BPMN Schema Validator">
    <OKAssertion assertion="Validation" message="Schema validation succeeded"/>
    <Results name="TEST BPMN Schema Validator results:">
      <ListKeyValue key="OK" value="1"/>
      <ListKeyValue key="FINDINGS" value="0"/>
    </Results>
  </Test>
  <Test name="A.3.0">
    <FindingAssertion assertion="callingMethod" message="Cannot find attribute" parameter="id"/>
    <NodePush message="Push" identifier="" caller="callingMethod">
      <OKAssertion assertion="selectElementX" message="/bpmn:definitions/bpmn:process">
        <testContext>
          <nodeID>mod.267311</nodeID>
        </testContext>
      </OKAssertion>
      <NodePush message="Push" identifier="mod.267311" caller="selectElementX">
        <OKAssertion assertion="navigateElement" message="bpmn:startEvent[@name=&apos;Start Event&apos;]">
          <testContext>
            <stackID>mod.267311</stackID>
            <nodeID>mod.267311</nodeID>
            <id>mod.267311</id>
          </testContext>
        </OKAssertion>
        <FindingAssertion assertion="navigateFollowingElement" message="No outgoing reference found" parameter="bpmn:task[@name=&apos;Task 1&apos;]"/>
        <FindingAssertion assertion="navigateFollowingElement" message="No outgoing reference found" parameter="bpmn:subProcess[@name=&apos;Collapsed Sub-Process&apos;]"/>
        <FindingAssertion assertion="navigateBoundaryEvent" message="Cannot find boundary element" parameter="bpmn:boundaryEvent[@name=&apos;Boundary Intermediate Event Non-Interrupting Message&apos; and @attachedToRef=&apos;_1ac4b759-40e3-4dfb-b0e3-ad1d201d6c3d&apos;]"/>
        <FindingAssertion assertion="checkMessageEvent" message="Cannot find message event definition" parameter="bpmn:messageEventDefinition | bpmn:messageEventDefinitionRef"/>
        <FindingAssertion assertion="checkCancelActivity" message="Attribute cancelActivity is not existing and the expected value (false) is not equal to the default value (true)" parameter=""/>
        <FindingAssertion assertion="navigateFollowingElement" message="No outgoing reference found" parameter="bpmn:task[@name=&apos;Task 3&apos;]"/>
        <FindingAssertion assertion="navigateFollowingElement" message="No outgoing reference found" parameter="bpmn:endEvent[@name=&apos;End Event 1&apos;]"/>
        <OKAssertion assertion="navigateElement" message="">
          <testContext>
            <stackID>mod.267311</stackID>
            <id>mod.267311</id>
          </testContext>
        </OKAssertion>
        <FindingAssertion assertion="navigateFollowingElement" message="The base node is null"/>
        <FindingAssertion assertion="navigateFollowingElement" message="The base node is null"/>
        <OKAssertion assertion="navigateElement" message="">
          <testContext>
            <stackID>mod.267311</stackID>
            <id>mod.267311</id>
          </testContext>
        </OKAssertion>
        <FindingAssertion assertion="navigateBoundaryEvent" message="Current node is null"/>
        <FindingAssertion assertion="checkEscalationEvent" message="Current node is null"/>
        <FindingAssertion assertion="checkCancelActivity" message="No current node" parameter=""/>
        <FindingAssertion assertion="navigateFollowingElement" message="The base node is null"/>
        <FindingAssertion assertion="navigateFollowingElement" message="The base node is null"/>
        <NodePop message="Pop" identifier="mod.267311" caller="callingMethod">
          <testContext>
            <stackID>mod.267311</stackID>
            <id>mod.267311</id>
          </testContext>
        </NodePop>
        <testContext>
          <nodeID>mod.267311</nodeID>
        </testContext>
      </NodePush>
      <testContext>
        <nodeID>mod.267311</nodeID>
      </testContext>
    </NodePush>
    <Results name="TEST A.3.0 results:">
      <ListKeyValue key="OK" value="4"/>
      <ListKeyValue key="FINDINGS" value="15"/>
    </Results>
  </Test>
  <TotalResults>
    <ListKeyValue key="OK" value="5"/>
    <ListKeyValue key="FINDINGS " value="15"/>
  </TotalResults>
</TestRun>